ext.deps = [:]

def build_versions = [:]
build_versions.compile_sdk = 30
build_versions.build_tools_version = "30.0.1"
build_versions.min_sdk = 21
build_versions.target_sdk = 30
ext.build_versions = build_versions

def versions = [:]
versions.appcompat = '1.2.0'
versions.android_gradle_plugin = '4.1.2'
versions.arch_core = '2.1.0'
versions.atsl_junit = "1.1.2"
versions.constraint_layout = '2.0.4'
versions.core_ktx = '1.3.2'
versions.coroutine = '1.3.3'
versions.dagger = '2.28.1'
versions.espresso = '3.3.0'
versions.fragment = '1.2.0'
versions.junit = '4.12'
versions.kotlin = '1.4.21'
versions.lifecycle = '2.2.0'
versions.navigation = '2.3.3'
versions.swipe_refresh_layout = '1.1.0'
versions.http_logging_interceptor = '4.2.1'
versions.recyclerview = '1.1.0'
versions.retrofit = '2.7.0'
versions.room = '2.2.5'
versions.timber = '4.7.1'
versions.logger = '2.2.0'
versions.material_design = '1.2.1'
versions.detekt = "1.7.2"
versions.google_service = "4.3.3"
versions.location = "17.0.0"
versions.google_map = "17.0.0"
versions.firebase_cloud_messaging = "20.2.4"
versions.firebase_crashlytics_gradle = "2.2.1"
versions.firebase_crashlytics = "17.2.1"
versions.glide = "4.11.0"
versions.test_core = "1.0.0"
versions.mockito_core = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.coroutine_test = "1.3.8"
versions.test_runner = "1.1.0"
versions.test_rules = "1.1.0"
ext.versions = versions

def atsl = [:]
atsl.test_core = "androidx.test:core:$versions.test_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.test_runner = "androidx.test:runner:$versions.test_runner"
atsl.test_rules = "androidx.test:rules:$versions.test_rules"
deps.atsl = atsl

def support = [:]
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:$versions.fragment"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
//lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit

deps.http_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.http_logging_interceptor"

def coroutine = [:]
coroutine.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine"
coroutine.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
coroutine.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine_test"
deps.coroutine = coroutine

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.material_design = "com.google.android.material:material:$versions.material_design"
deps.swipe_refresh_layout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"
deps.junit = "junit:junit:$versions.junit"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.logger = "com.orhanobut:logger:$versions.logger"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def image_loader = [:]
image_loader.glide = "com.github.bumptech.glide:glide:$versions.glide"
image_loader.glide_compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.image_loader = image_loader

def gms = [:]
gms.google_service = "com.google.gms:google-services:$versions.google_service"
gms.location = "com.google.android.gms:play-services-location:$versions.location"
gms.google_map = "com.google.android.gms:play-services-maps:$versions.google_map"
deps.gms = gms

def firebase = [:]
firebase.cloud_messaging = "com.google.firebase:firebase-messaging:$versions.firebase_cloud_messaging"
firebase.crashlytics_gradle = "com.google.firebase:firebase-crashlytics-gradle:$versions.firebase_crashlytics_gradle"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics-ktx:$versions.firebase_crashlytics"
deps.firebase = firebase

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito_core"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

deps.detekt = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos